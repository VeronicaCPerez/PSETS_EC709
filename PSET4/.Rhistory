stats_table <- stats_by_group %>%
pivot_longer(
cols = -treatment,
names_to = c("stat", "variable"),
names_sep = "_",
values_to = "value"
) %>%
pivot_wider(
names_from = c(treatment, stat),
values_from = value,
names_glue = "D_it = {treatment}_{stat}"
) %>%
select(variable, `D_it = 0_mean`, `D_it = 0_sd`, `D_it = 1_mean`, `D_it = 1_sd`)
stats_table
stats_by_group
stats_table <- stats_by_group %>%
pivot_longer(
cols = -treatment,
names_to = c("stat", "variable"),
names_sep = "_",
values_to = "value"
) %>%
pivot_wider(
names_from = c(treatment, stat),
values_from = value,
names_glue = "D_it = {treatment}_{stat}"
) %>%
select(variable, `D_it = 0_mean`, `D_it = 0_sd`, `D_it = 1_mean`, `D_it = 1_sd`)
setDT(data)
library(data.table)
setDT(data)
summary_table <- rbindlist(
lapply(variables, function(var) {
dt[, .(
variable = var,
`mean_D_it=0` = mean(get(var)[treatment == 0], na.rm = TRUE),
`sd_D_it=0` = sd(get(var)[treatment == 0], na.rm = TRUE),
`mean_D_it>0` = mean(get(var)[treatment == 1], na.rm = TRUE),
`sd_D_it>0` = sd(get(var)[treatment == 1], na.rm = TRUE)
)]
})
)
summary_table <- rbindlist(
lapply(col_to_aggregate, function(var) {
dt[, .(
variable = var,
`mean_D_it=0` = mean(get(var)[treatment == 0], na.rm = TRUE),
`sd_D_it=0` = sd(get(var)[treatment == 0], na.rm = TRUE),
`mean_D_it>0` = mean(get(var)[treatment == 1], na.rm = TRUE),
`sd_D_it>0` = sd(get(var)[treatment == 1], na.rm = TRUE)
)]
})
)
library(dplyr)
library(tidyr)
library(kableExtra)
library(data.table)
# outputs path
outputs_path <- "/Users/veronica/Dropbox/Apps/Overleaf/EC_709_vcperez/PSET_4"
# Load the data
data <- read_dta("/Users/veronica/Dropbox/PhD/2024_2/EC_709/PSETS_EC709/PSET4/castle.dta")
# use data.table
setDT(data)
# Question 1 --------------------------------------------------------------
# List of columns to aggregate
col_to_aggregate <- c('homicide', 'robbery', 'assault', 'burglary', 'larceny',
'motor', 'murder', 'police', 'unemployrt', 'income',
'blackm_15_24', 'whitem_15_24', 'blackm_25_44', 'whitem_25_44',
'prisoner', 'poverty', 'exp_subsidy', 'exp_pubwelfare', 'popwt')
# Create dummy variable (=1 if cdl > 0)
data$treatment <- ifelse(data$cdl >0, 1, 0)
# Calculate the means and standard deviations by condition on D_it
summary_table <- rbindlist(
lapply(col_to_aggregate, function(var) {
dt[, .(
variable = var,
`mean_D_it=0` = mean(get(var)[treatment == 0], na.rm = TRUE),
`sd_D_it=0` = sd(get(var)[treatment == 0], na.rm = TRUE),
`mean_D_it>0` = mean(get(var)[treatment == 1], na.rm = TRUE),
`sd_D_it>0` = sd(get(var)[treatment == 1], na.rm = TRUE)
)]
})
)
Corrected code
summary_table <- rbindlist(
lapply(col_to_aggregate, function(var) {
dt[, list(
variable = var,
mean_D_it_0 = mean(get(var)[treatment == 0], na.rm = TRUE),
sd_D_it_0 = sd(get(var)[treatment == 0], na.rm = TRUE),
mean_D_it_1 = mean(get(var)[treatment == 1], na.rm = TRUE),
sd_D_it_1 = sd(get(var)[treatment == 1], na.rm = TRUE)
)]
})
)
col_to_aggregate <- c('homicide', 'robbery', 'assault', 'burglary', 'larceny',
'motor', 'murder', 'police', 'unemployrt', 'income',
'blackm_15_24', 'whitem_15_24', 'blackm_25_44', 'whitem_25_44',
'prisoner', 'poverty', 'exp_subsidy', 'exp_pubwelfare', 'popwt')
# Create dummy variable (=1 if cdl > 0)
data$treatment <- ifelse(data$cdl >0, 1, 0)
# Corrected code
summary_table <- rbindlist(
lapply(col_to_aggregate, function(var) {
data[, list(
variable = var,
mean_D_it_0 = mean(get(var)[treatment == 0], na.rm = TRUE),
sd_D_it_0 = sd(get(var)[treatment == 0], na.rm = TRUE),
mean_D_it_1 = mean(get(var)[treatment == 1], na.rm = TRUE),
sd_D_it_1 = sd(get(var)[treatment == 1], na.rm = TRUE)
)]
})
)
# Print the summary table
print(summary_table)
library(xtable)
latex_table <- xtable(summary_table, caption = "Summary Statistics by Treatment Status", label = "tab:summary_stats")
# Print LaTeX code to console with formatting options
print(latex_table, include.rownames = FALSE, booktabs = TRUE, digits = c(0, 0, 2, 2, 2, 2))
print(latex_table, include.rownames = FALSE, booktabs = TRUE, digits = c(0, 0, 2, 2, 2, 2),
add.to.row = list(pos = list(-1),
command = c("& \\multicolumn{2}{c}{D\\_it = 0} & \\multicolumn{2}{c}{D\\_it > 0} \\\\\n\\cmidrule(lr){2-3} \\cmidrule(lr){4-5} \nVariable & Mean & SD & Mean & SD \\\\\n")))
print(latex_table, include.rownames = FALSE, booktabs = TRUE,
add.to.row = list(pos = list(-1),
command = c("\\toprule\n & \\multicolumn{2}{c}{D\\_it = 0} & \\multicolumn{2}{c}{D\\_it > 0} \\\\\n\\cmidrule(lr){2-3} \\cmidrule(lr){4-5} \nVariable & Mean & SD & Mean & SD \\\\\n\\midrule\n")),
hline.after = NULL)
latex_table
# change headers
table_content <- print(
xtable(summary_table),
include.rownames = FALSE,
include.colnames = FALSE,
only.contents = TRUE,
print.results = FALSE
)
table_content
print(table_content)
writeLines(table_content_Q1, paste0(outputs_path,"/Pset4_Q1.tex"))
table_content_Q1 <- print(
xtable(summary_table),
include.rownames = FALSE,
include.colnames = FALSE,
only.contents = TRUE,
print.results = FALSE
)
writeLines(table_content_Q1, paste0(outputs_path,"/Pset4_Q1.tex"))
data$homicide_per_100k <- data$homicide/data$popwt*100000
View(data)
data$ln(homicide_per_100k) <- ln(data$homicide_per_100k)
data$ln(homicide_per_100k) <- log(data$homicide_per_100k)
data$ln_homicide_per_100k <- log(data$homicide_per_100k)
col_to_aggregate <- c('ln_homicide_per_100k', 'homicide', 'robbery', 'assault',
'burglary', 'larceny', 'motor', 'murder', 'police',
'unemployrt', 'income', 'blackm_15_24', 'whitem_15_24',
'blackm_25_44', 'whitem_25_44', 'prisoner', 'poverty',
'exp_subsidy', 'exp_pubwelfare', 'popwt')
data$treatment <- ifelse(data$cdl >0, 1, 0)
# Corrected code
summary_table <- rbindlist(
lapply(col_to_aggregate, function(var) {
data[, list(
variable = var,
mean_D_it_0 = mean(get(var)[treatment == 0], na.rm = TRUE),
sd_D_it_0 = sd(get(var)[treatment == 0], na.rm = TRUE),
mean_D_it_1 = mean(get(var)[treatment == 1], na.rm = TRUE),
sd_D_it_1 = sd(get(var)[treatment == 1], na.rm = TRUE)
)]
})
)
table_content_Q1 <- print(
xtable(summary_table),
include.rownames = FALSE,
include.colnames = FALSE,
only.contents = TRUE,
print.results = FALSE
)
table_content_Q1
writeLines(table_content_Q1, paste0(outputs_path,"/Pset4_Q1.tex"))
data %>%
group_by(state) %>%
transform(max(treatment))
data$max_treatment <- data %>%
group_by(state) %>%
transform(max(treatment))
data$max_treatment <- data %>%
group_by(state) %>%
mutate(max(treatment))
data$max_treatment <- data %>%
group_by(state) %>%
mutate(max_treatment = max(treatment)) %>%
ungroup()
library(dplyr)
library(tidyr)
library(kableExtra)
library(data.table)
library(xtable)
# outputs path
outputs_path <- "/Users/veronica/Dropbox/Apps/Overleaf/EC_709_vcperez/PSET_4"
# Load the data
data <- read_dta("/Users/veronica/Dropbox/PhD/2024_2/EC_709/PSETS_EC709/PSET4/castle.dta")
# use data.table
setDT(data)
# make Y_it (homicides per 100000)
data$homicide_per_100k <- data$homicide/data$popwt*100000
data$ln_homicide_per_100k <- log(data$homicide_per_100k)
# Question 1 --------------------------------------------------------------
# List of columns to aggregate
col_to_aggregate <- c('ln_homicide_per_100k', 'homicide', 'robbery', 'assault',
'burglary', 'larceny', 'motor', 'murder', 'police',
'unemployrt', 'income', 'blackm_15_24', 'whitem_15_24',
'blackm_25_44', 'whitem_25_44', 'prisoner', 'poverty',
'exp_subsidy', 'exp_pubwelfare', 'popwt')
# Create dummy variable (=1 if cdl > 0)
data$treatment <- ifelse(data$cdl >0, 1, 0)
# Corrected code
summary_table <- rbindlist(
lapply(col_to_aggregate, function(var) {
data[, list(
variable = var,
mean_D_it_0 = mean(get(var)[treatment == 0], na.rm = TRUE),
sd_D_it_0 = sd(get(var)[treatment == 0], na.rm = TRUE),
mean_D_it_1 = mean(get(var)[treatment == 1], na.rm = TRUE),
sd_D_it_1 = sd(get(var)[treatment == 1], na.rm = TRUE)
)]
})
)
# table for overleaf
table_content_Q1 <- print(
xtable(summary_table),
include.rownames = FALSE,
include.colnames = FALSE,
only.contents = TRUE,
print.results = FALSE
)
writeLines(table_content_Q1, paste0(outputs_path,"/Pset4_Q1.tex"))
# Q2 ----------------------------------------------------------------------
# make never treated and treated groups
# make maximum for the D_it variable by state
data$max_treatment <- data %>%
group_by(state) %>%
mutate(max_treatment = max(treatment)) %>%
ungroup()
data$max_treatment <- data[, max_treatment := max(treatment), by = state]
data[, max_treatment := max(treatment), by = state]
data$never_treated <- ifelse(data$max_treatment == 0, 1, 0)
ggplot(data, aes(x = year, y = ln_homicide_per_100k, color = never_treated, group = never_treated)) +
geom_line() +
geom_point() +
labs(title = "Time Trend for Treated and Never Treated Groups",
x = "Year",
y = "Outcome Variable",
color = "Group") +
theme_minimal()
library(ggplot2)
ggplot(data, aes(x = year, y = ln_homicide_per_100k, color = never_treated, group = never_treated)) +
geom_line() +
geom_point() +
labs(title = "Time Trend for Treated and Never Treated Groups",
x = "Year",
y = "Outcome Variable",
color = "Group") +
theme_minimal()
data_did_graph <- data %>%
group_by(year, never_treated) %>%
summarise(mean_ln_homicide_per_100k = mean(ln_homicide_per_100k, na.rm = TRUE)) %>%
ungroup() %>%
mutate(group = ifelse(never_treated == 1, "Never Treated", "Treated"))
ggplot(data_did_graph, aes(x = year, y = mean_ln_homicide_per_100k, color = group, group = group)) +
geom_line() +
geom_point() +
labs(title = "Time Trend for Treated and Never Treated Groups",
x = "Year",
y = "Outcome Variable",
color = "Group") +
theme_minimal()
data_did_graph <- data_did_graph %>%
subset(year < 2005)
# Plotting the time trend by group
ggplot(data_did_graph, aes(x = year, y = mean_ln_homicide_per_100k, color = group, group = group)) +
geom_line() +
geom_point() +
labs(title = "Time Trend for Treated and Never Treated Groups",
x = "Year",
y = "Outcome Variable",
color = "Group") +
theme_minimal()
data_did_graph <- data %>%
group_by(year, never_treated) %>%
summarise(mean_homicide_per_100k = mean(homicide_per_100k, na.rm = TRUE)) %>%
ungroup() %>%
mutate(group = ifelse(never_treated == 1, "Never Treated", "Treated"))
# keep years < 2005
data_did_graph <- data_did_graph %>%
subset(year < 2005)
# Plotting the time trend by group
ggplot(data_did_graph, aes(x = year, y = mean_homicide_per_100k, color = group, group = group)) +
geom_line() +
geom_point() +
labs(title = "Time Trend for Treated and Never Treated Groups",
x = "Year",
y = "Outcome Variable",
color = "Group") +
theme_minimal()
library(dplyr)
library(tidyr)
library(kableExtra)
library(data.table)
library(xtable)
library(ggplot2)
# outputs path
outputs_path <- "/Users/veronica/Dropbox/Apps/Overleaf/EC_709_vcperez/PSET_4"
# Load the data
data <- read_dta("/Users/veronica/Dropbox/PhD/2024_2/EC_709/PSETS_EC709/PSET4/castle.dta")
# use data.table
setDT(data)
# make Y_it ln(homicides per 100000)
data$ln_homicide_per_100k <- log(data$homicide)
# Question 1 --------------------------------------------------------------
# List of columns to aggregate
col_to_aggregate <- c('ln_homicide_per_100k', 'homicide', 'robbery', 'assault',
'burglary', 'larceny', 'motor', 'murder', 'police',
'unemployrt', 'income', 'blackm_15_24', 'whitem_15_24',
'blackm_25_44', 'whitem_25_44', 'prisoner', 'poverty',
'exp_subsidy', 'exp_pubwelfare', 'popwt')
# Create dummy variable (=1 if cdl > 0)
data$treatment <- ifelse(data$cdl >0, 1, 0)
# Corrected code
summary_table <- rbindlist(
lapply(col_to_aggregate, function(var) {
data[, list(
variable = var,
mean_D_it_0 = mean(get(var)[treatment == 0], na.rm = TRUE),
sd_D_it_0 = sd(get(var)[treatment == 0], na.rm = TRUE),
mean_D_it_1 = mean(get(var)[treatment == 1], na.rm = TRUE),
sd_D_it_1 = sd(get(var)[treatment == 1], na.rm = TRUE)
)]
})
)
# table for overleaf
table_content_Q1 <- print(
xtable(summary_table),
include.rownames = FALSE,
include.colnames = FALSE,
only.contents = TRUE,
print.results = FALSE
)
writeLines(table_content_Q1, paste0(outputs_path,"/Pset4_Q1.tex"))
# Q2 ----------------------------------------------------------------------
# make never treated and treated groups
# make maximum for the D_it variable by state
data[, max_treatment := max(treatment), by = state]
# make group "never_treated" = 1 if max_treatment == 0
data$never_treated <- ifelse(data$max_treatment == 0, 1, 0)
# making data for graph for ln_homicide_per_100k between 1 and 0 d
data_did_graph <- data %>%
group_by(year, never_treated) %>%
summarise(mean_homicide = mean(homicide, na.rm = TRUE)) %>%
ungroup() %>%
mutate(group = ifelse(never_treated == 1, "Never Treated", "Treated"))
# keep years < 2005
data_did_graph <- data_did_graph %>%
subset(year < 2005)
# Plotting the time trend by group
ggplot(data_did_graph, aes(x = year, y = mean_homicide, color = group, group = group)) +
geom_line() +
geom_point() +
labs(title = "Time Trend for Treated and Never Treated Groups",
x = "Year",
y = "Outcome Variable",
color = "Group") +
theme_minimal()
data_did_graph <- data %>%
group_by(year, never_treated) %>%
summarise(mean_homicide = weighted.mean(homicide, popwt, na.rm = TRUE)) %>%
ungroup() %>%
mutate(group = ifelse(never_treated == 1, "Never Treated", "Treated"))
# keep years < 2005
data_did_graph <- data_did_graph %>%
subset(year < 2005)
# Plotting the time trend by group
ggplot(data_did_graph, aes(x = year, y = mean_homicide, color = group, group = group)) +
geom_line() +
geom_point() +
labs(title = "Time Trend for Treated and Never Treated Groups",
x = "Year",
y = "Outcome Variable",
color = "Group") +
theme_minimal()
ggplot(data_did_graph, aes(x = year, y = mean_homicide, color = group, group = group)) +
geom_line() +
geom_point() +
labs(title = "Time Trend for homicides per 100k, weight by population",
x = "Year",
y = "Outcome Variable",
color = "Group") +
theme_minimal()
paralel_trend <- ggplot(data_did_graph, aes(x = year, y = mean_homicide, color = group, group = group)) +
geom_line() +
geom_point() +
labs(title = "Pararel trend for homicides per 100k, weight by population",
x = "Year",
y = "Outcome Variable",
color = "Group") +
theme_minimal()
ggsave(paste(outputs_path,"PSET4_Q2.png"), plot = paralel_trend)
ggsave(paste(outputs_path,"PSET4_Q2.png"), plot = paralel_trend, width = 90, height = 180, unit = "mm", dpi = 300)
9.4*100
6.21*100
ggsave(paste(outputs_path,"PSET4_Q2.png"), plot = paralel_trend, width = 1000, height = 700, unit = "mm", dpi = 300)
10
paralel_trend <- ggplot(data_did_graph, aes(x = year, y = mean_homicide, color = group, group = group)) +
geom_line() +
geom_point() +
labs(title = "Pararel trend for homicides per 100k, weight by population",
x = "Year",
y = "Outcome Variable",
color = "Group") +
theme_minimal()
paralel_trend
ggsave(paste(outputs_path,"/PSET4_Q2.png"), plot = paralel_trend, width = 1000, height = 700, dpi = 1000)
ggsave(paste(outputs_path,"/PSET4_Q2.png"), plot = paralel_trend, dpi = 300)
ggsave(paste(outputs_path,"/PSET4_Q2.png"), plot = paralel_trend, dpi = 300)
ggsave(paste0(outputs_path,"/PSET4_Q2.png"), plot = paralel_trend, dpi = 300)
paralel_trend <- ggplot(data_did_graph, aes(x = year, y = mean_homicide, color = group, group = group)) +
geom_line() +
geom_point() +
labs(title = "Pararel trend for homicides, weighted by population",
x = "Year",
y = "homicides per 100k",
color = "Group") +
theme_minimal()
ggsave(paste0(outputs_path,"/PSET4_Q2.png"), plot = paralel_trend, dpi = 300)
library(feols)
install.packages("feols")
library(feols)
library("feols"")
""
library(fixest)
feols(ln_homicide_per_100k ~ treatment | state + year,data)
feols(ln_homicide_per_100k ~ treatment | state + year,data,weights = ~ popwt)
TWFE_basic <- feols(ln_homicide_per_100k ~ treatment | state + year,data,weights = ~ popwt)
TWFE_covariates <- feols(ln_homicide_per_100k ~ treatment + robbery + assault +
burglary + larceny + motor + murder + police + unemployrt +
income + blackm_15_24 + whitem_15_24 + black_25_44 +
whitem_25_44 + prisoner + lagprisoner + poverty +
exp_subsidy + exp_pubwelfare
| state + year,data,weights = ~ popwt)
TWFE_covariates <- feols(ln_homicide_per_100k ~ treatment + robbery + assault +
burglary + larceny + motor + murder + police + unemployrt +
income + blackm_15_24 + whitem_15_24 + blackm_25_44 +
whitem_25_44 + prisoner + lagprisoner + poverty +
exp_subsidy + exp_pubwelfare
| state + year,data,weights = ~ popwt)
TWFE_covariates
data$group_treatment <- data %>%
group_by(state) %>%
mutate(first_treated_period = ifelse(any(treatment == 1), min(t[which(treatment == 1)]), 0)) %>%
ungroup()
data <- data %>%
group_by(state) %>%
mutate(first_treated_period = ifelse(any(treatment == 1), min(time[treatment == 1]), 0)) %>%
ungroup()
View(data)
first_treated <- data %>%
filter(treatment == 1) %>%
group_by(state) %>%
summarise(first_treated_period = min(time))
data[, first_treated_period := ifelse(any(treatment == 1), min(time[treatment == 1]), 0), by = state]
data[, first_treated_period := ifelse(any(treatment == 1), min(year[treatment == 1]), 0), by = state]
data$gname<-data[, first_treated_period := ifelse(any(treatment == 1), min(year[treatment == 1]), 0), by = state]
data[, first_treated_period_state := max(first_treated_period), by = state]
data[, first_treated_period_state := max(first_treated_period), by = state]
data[, gname := ifelse(year>=first_treated_period,1,0), by = state]
View(data)
data[, gname := ifelese(first_treated_period==0,0,ifelse(year>=first_treated_period,1,0)), by = state]
data[, gname := ifelse(first_treated_period==0,0,ifelse(year>=first_treated_period,1,0)), by = state]
View(data)
data[, G := ifelse(first_treated_period==0,0,ifelse(year>=first_treated_period,1,0)), by = state]
example_attgt <- att_gt(yname = "ln_homicide_per_100k",
tname = "year",
idname = "state",
gname = "G",
data = data
)
library(did)
example_attgt <- att_gt(yname = "ln_homicide_per_100k",
tname = "year",
idname = "state",
gname = "G",
data = data
)
View(data)
# estimate group-time average treatment effects using att_gt method
example_attgt <- att_gt(yname = "ln_homicide_per_100k",
tname = "year",
idname = "sid",
gname = "G",
data = data
)
# estimate group-time average treatment effects using att_gt method
example_attgt <- att_gt(yname = "ln_homicide_per_100k",
tname = "year",
idname = "sid",
gname = "first_treated_period",
data = data
)
summary(example_attgt)
ggdid(example_attgt)
agg.es <- aggte(example_attgt, type = "dynamic")
summary(agg.es)
ggdid(agg.es)
summary(agg.es)
